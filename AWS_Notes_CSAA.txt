
IAM is universal it does not apply to regions.

the root account is the master account full privigles.
new users have no permissions.
new users get an access key id and a secret access key when created.
access keys are only used for progromatic access.
the access key is only viewable once.
always set up multi-factor on the root account.
you can create an customize password policies.


IAM Policies:
    They are always implicitly denied.
    Evaluations are merged down (users, groups, roles) and evaluated.

IAM Users:
    Know the difference between users, roles, and Policies and when to use them.
    ARN = real identity. Applicable to users and roles.
    Inline Policies are applied under the permissions. (permissions Policies)
    Security Settings are where most relevant things are set.
    Exam-Tips:
        Hard limit of 5000 users per account.
        10 group memberships per IAM users.
        Default maximum of 10 managed policies per user.
        no inline limit but you cannot exceed 2048 character for all inline policies on a IAM user.
        1 MFA per user.
        2 access keys per user.

IAM Groups:
    Exam Tips
    Admin feature to group users.
    Inline policies can be added to groups and these flow down to the users.
    groups are not true identities and they can be referenced.
    Groups have no creds.

IAM Access Keys:
    access via CLI,API, and applications.
    its your responsibility to store the secret access key not AWS.
    you cant change or update the secret access keys.
    only 2 access keys per user, total inactive or active, only 2 total.
    they do not expire.
    you cannot use access keys to auth to the console.

IAM Roles:
    Overcomes limit of 5000 users.
    Why:
    Not for when you need it to log into something for example the console.  No passwords etc...

    Use for extra support: Give the option to elevate privigles to get into something. Give temp SU access.
    Use for service access: Maybe you want to access to something else, give an ec2 instance a role to access s3 to interact.
    Use for a merger of accounts.  Example you have bought another company and you want to access each others assets.
    use for multiple accounts in a company. 

AWS Organizations:
    Manage multiple accounts.
    consolidated billing.
    limit usage with service control policies
    In a organization tou can have Orginizational Units or AWS accounts.  Units can have AWS accounts or other OU's.
    You can apply control policies to OU's or AWS accounts.  
    The master account cannot have any policies it is best to leave it as just a master account and not have resources in it.
    OU's has a limit of 2 accounts, you can ask for more by going to support.

    Service control policies: 
        allows an limits what you can do on accounts.
        create the policy in the master account then you apply it to the account that you want it on.

    Role Switching:
        using a master account user to swap to other member accounts
        Need account number of member account.
        you need role name: OrganizationAccountAccess
        give it a display name: IE: DEV
        Pick a color.
        you can log in via other forms of identities.

EC2 Compute:
    Create a key part before you create the instance.
    select the ami type that you want aka the image.
    EC2 is used in typical server operations. Otherwise you may use serverless and or containers.
    If you shut down the instance in the console you are not billed but your EBS storage may still bill you.
    Terminate the instance to kill all billing.
    Doing a shut down from the terminal does not kill billing either.

    Storage:
        Instance store volumes do not move with the instances used for temp high performance things.
        EBS Volumes move with the instance and are persistent.
    Security Group:
        Basically virtual firewall
        Creates a ENI - Elastic Network Interface.
    Instance Types and Sizes:
        Families:
            General Purpose:
                Good balance CPU MEM ETC:
                Types:
                    A1, T3, T3a(AMD), T2, M5, M5a(AMD), M4

            Compute Optimized:
                Compute intensive, best CPU's avaialble.
                Maximum Performance CPU Wise.
                Types:
                    C5, C5n, C4

            Memory Optimized:
                Large Memory, usually like Databases and what not.
                Types:
                    R5, R5a, R4, X1e, X1, High Memory, z1d

            Storage Optimized:
                Super fast storage.
                NoSQL, Data Warehouse
                Types:
                    I3, I3en, D2, H1

            Acelerated Computing:
                Specific Hardware capability.
                FPGA's - Program hardware.
                GPU's -  3D modeling. etc..
                Types:
                    P3, P2, Inf1, G4, G3, F1
        Sizes:
            nano, micro, small, medium, large, xlarge, 2xlarge
        
        Special Cases:
            a = AMD
            A = ARM Based
            n = Higher Speed Networking
            d = NVME Storage

    EC2 Storage:
        Instance Storage: (Directly connected)
            Tempory, not resillient, destroyed if the instance moves.
        EBS Block Storage: (Network Based NAS)
            EBS stays in AZ Zones but not between.
            Snapshots are backups basically.
            EBS Encryption, encrypts the drives.
            Types:
                gp2 = SSD - Default, balance of iops/MiB/s - burst pool IPS per GB.
                io1 = SSD - Highest performance, can adjust size and IOPS separately.
                sc1 = HDD - lowest cost infrequent access, cant be a boot volume.
                st1 = HDD - Low cost throughput intensive, cant be a boot volume.
                Magnetic = Legacy and not really used.
            EBS Snapshots:
                point in time backup.
                subsequent snapshots only takes in the changes and adds it to the last.
                backup goes to s3 which backs up globally and gets replicated.
                you can automate it by using DLM Lifecycle Manager.
    Security Groups:
        Software Firewalls that are attached to a network interface. ENI - Elastic Network Interface.  
        5 security groups maximum for every ENI
        set of inbound and outbound groups.
        hidden implicent deny if no rules are matched.
        you cannot add denys to the security group.
        Security groups are stateful - any traffic allowed in/out the return traffic is auto allowed.
        you can reference aws resources and other security groups, even themselves.
    MetaData:
        http://169.254.169.254/latest/meta-data - Memorize this.. Use this to get information about the instance.
        http://169.254.169.254/latest/meta-data/ami-id
        http://169.254.169.254/latest/meta-data/instance-id
        http://169.254.169.254/latest/meta-data/instance-type
        

    AMI: (baked in getting something installed quickly)
        Instance Store AMI's, not backed by EBS. Rare
        EBS backed AMI's.
        AMI creates snapshots of the EBS Storage and references them when set up.
        It also carries over permissions.
        downside is its static, not dynamic.
    Bootstrapping: (dynamic to add certain things on demand)
        Giving a instance a series of commands to perform when its created.
        you can use a shell script (powershell or bash)
        you can also use cloudinit.. 

        Exam:  Its not one or the other bootstrapping can be done with AMI. 
    ENI, IP, DNS:
        Public Instance - has a public IP.
            accessible on the public internet.
            by default pub ip does not change when you reboot
            by default pub ip it will change when shut down.
            elastic ip address's: is a static IP address.

        Private Instance - only avaialble inside a vpc. Internal IP.
        Instances can have limits on private ips based on the size of the instance.
    Instance Roles:
        Type of IAM Role for EC2.
        Create a instance profile.. it allows you to access thigns like S3 and what not.
        Always use IAM roles when you can. Only time its nto required is when a user is required to login.
        Basically apply a permissions structure to an instance. limit it to certain assets.
    EBS Volume Encryption:
        Doing encryption does it both at rest and in transit.
        You can set it by default per region.
        Keys are stored in the KMS Service in the console.
        snapshots cannot be created unencrypted if it was created encrypted.  
        ami's will also be encrypted if created like that.
        It is handled by an EC2 host, it doesnt cause any performance hits.  The instance is unaware that there is any encryption happening.
    EBS Optimization:
        Created a storage path for data transfer. They used to be shared.
        Allows for more consistent utilization of both network and storage.
        Make sure you are using EBS optimization to get the performance benefit on smaller instances.
    Enhanced Networking:
        Enahnced Networking uses SR-4IOV, allows for better Networking as the hypervisor does not have to manage this.
        Better Latency.
    Placement Groups:
        Allows you to control physical location or where the EC2 instance runs from.
        Cluster PG = performance, limited to 1 availibility zone. They are physically close together.  Max performance.
            Exam:  Launch all your Instances at the same time and pick the same type.
        Partition PG = Launched into separate partitions (racks), if a single partition fails the other can pick it up.
            Used for larger deployments.
        Spread PG = Purely for availability. Designed for small infrastructure deployments.  Maximum availability.
    Billing Models:
        On demand  = default method. billed for every 60 seconds.
            when to use:
                Default or unknown demand.
                Anything in between reserved/spot.
                Short-term workloads that cannot tolerate interruption.
        Spot Billing = Bid on resources, they set the price based on demand. They can go up or down.  If the prices rises above what you bid the instance is terminated.
            Choose this for non critical workloads. Do not use for things that cannot tolerate failure.
            When to use:
                Bursty workloads.
                Cost critical, which can cope with interuption. 
        Reserved = lock in instances for a reduced rate for 1 or 3 years.
            Zonal or Regional reservations.
                Exam: Regional is more flexible but has no capacity reservation. (needs to be zonal in this case)
            When to use:
                When you have consistent loads.
                Known and understood growth.
                Critical systems/components.
        Dedicated hosts:
            Come with an assocatied hourly charge. 
            allows you to choose a number of instances onto a host. Each type can determine a different amount.
            When:
                Compliance - if it needs to be dedicated for security reasons.
                If you were bringing your own license like VMWare or something like that.


SAA-C02 Class Start:

S3: Simple Storage Service
    File storage.  Object storage - flat files word docs ect.  
    Data is spread across multiple devices and facilities.
    Files can be 0 bytes to 5 TB.
    files are stored in buckets.
    Names of buckets need to be unique globally.
    HTTP 200 code comes back when you create a bucket.  - TEST Question.
    Key: Name of the Object.
    Value: The data that is made up of a sequence of bytes.
    Version ID: Important for versioning.
    Consistency:
        Read after Write consistently for puts.  Can read it immediatley after uploading.
        Eventual consisitency for overwrite puts and deletes.  Update a file or delete it takes a bit to get the new version.
    Garauntee's
        99.99% availability for the S3 platform
        99.9% availability
        11 9's durability.
    S3 Features:
        Tiered Storage.
        Lifecycle management.
        Versioning.
        Encryption.
        MFA Delete.
        Secure your data with ACL's.
    S3 Standard:
        99.99 availability
        11 9's durability
        Stored redundantly across multiple devices in multiple facilities and is designed to sustain the loss of 2 facilities concurrently.
    S3 IA - Infrequently Accessed.
        Lower fee than S3 but you are charged a retrieval fee. 
    S3 oNE zONE IA
        no multiple availability zone resillient.
    S3 - Intelligent Tiering
        Designed to optimize cost. Moves your objects around your storage tiers automatically.
    S3 Glacier:
        Data Archiving. Hold on to it for a long time.
    S3 Glacier Deep Archive:
        Lowest cost but can take up to 12 hours to get your files.
    Billing for S3:
        Storage total.
        Number of Requests.
        Storage management pricing.
        Data Transfer pricing
        Transfer Acceleration.  Users cloud front to get moved quickly. Using the amazong backbone.
        Cross region replication. 
    S3 Security and Encryption:
        Buckets are private by default.
        ACL's go down to the object level.
        Buckets can be created to have logs put in various other buckets.
        Encryption Types:
            In Transit: SSL/TLS - browsing.
            At Rest - Encrypt it being as its being stored. 
                Server side - S3 managed Keys - SSE-S3 amazon managed.
                    AWS Key Managment Service.  - KMS
                    Server side encryption with customer provided keys.
                Client side - encrypt it on our pc and send up to S3.
    
    
    Exam Tips:
    
    S3:
        Remember S3 is Object-based: allows you to upload files.
        Files can be 0 to 5TB.`
        Unlimited Storage
        Files are stored in buckets.
        Universal name space = unique name globally is needed.
        creates a DNS name when the bucket is created.  https//bucketname.s3.amazonaws.com (N Virginia) https//bucketname.eu-west-1.amazonaws.com (Europe west)
        Not sutitable for an operating system on.
        successful upload gives you a 200 status code.
        You can turn on MFA delete to protect assets from being deleted.
        Key Fundamentals:
            Key: Name of the Object.
            Value: The data that is made up of a sequence of bytes.
            Version ID: Important for versioning.
            MetaData
            Subresources;
                access control lists - permissions.
                Torrent
        Read after Write consistently for puts.  Can read it immediatley after uploading.
        Eventual consisitency for overwrite puts and deletes.  Update a file or delete it takes a bit to get the new version.
        S3 Teired structure above = s3 standard - S3 = IA - S3 one zone IA (RRS) - S3 Intel Tiering - Glacier - Glacier Deep Archive.
        Read S3 FAQ - S3 comes up a lot on the exam.
        Storage Tiers: ( from most expensive to least)
            S3 Standard - Most expensive.
            S3 - IA 
            S3 - Intelligent Tiering - Use this one as it will move you objects if they are not used.  Not if you hae a lot monitoring of object.sutitable.
            S3 - One Zone IA
            S3 - Glacier
            S3 - Glacier deep archive.
        Versioning:
                Stores all versions of an objects even if you delete.
                great backup tool
                once enabled you cannot disable it only suspend.
                integrates with lifecycle rules.
                you can use MFA delete with it to add an additional layer of security.
        Lifecycle Rules:
            Automates moving your objects between the different storage tiers.
            Can be used in conjunction with versioning.
            can be applied to current and past versions.
        S3 Object Lock:
            Stores objects using a write once read many model (WORM)
            Object locks can be individual objets or applied across the bucket as a whole.
            Object locks have 2 modes: 
                governance mode (users can't overwrite or delete an object version or alter its lock settings unless they have special permissions.)
                compliance mode (cannot be deleted by anyone not even root.)
        S3 Glacier Vault Lock:
            allows to enforce compliance controls for individual S3 glacier vaults with a vaults lock policy.
        S3 Performance:
            S3 Prefixes:  bucketname/subfolder/subfolder2/superbowl.jpg  Prefix is the middle bit - /subfolder/subfolder2/  
            You get better performances spreading over different prefixes.
            The more prefixes you have the better the performance.
            You get 3500 PUT/COPY/POST/DELETE requests per prefix and 5500 GET/HEAD requests per prefix.
            KMS Encryptions can cause some limits on your performance.  There is a KMS Quota. 5500, 10,000, or 30,000 requests per second with KMS.
            You cannot request a KMS quota increase.
            Multipart uploads increase performance.
                recommended for files over 100MB
                required for files over 5GB
                paralleize uploads (this it was it does)
            Downloads:
                USes S3 Byte-Range Fetches:
                basically paralleizes the download as well.
        S3 Select:
            Uses SQL to retrieve you can increase your performance by 400%
            You pull down only a subset of the data you need.
            get data by rows or columns
        Glacier Select:
            Same concept of S3 Select. Run SQL queries directly on Glacier.
    AWS Organizations and Consolidated Billing:
        Allows you to consildate multiple accounts into one orgainization.
        Consilidated Billing:
            Aggregate of all of your accounts - breaks up the billing to individual teams.
        Always enable multi factor authenticaiton on root account.
        Always use a strong and complex password on root account.
        paying account should be used for billing purposes only.  Do not deploy resources into the paying account.
        enable/disable AWS services using Service Control Policies (SCP) either on OU or on individual accounts
        


        




